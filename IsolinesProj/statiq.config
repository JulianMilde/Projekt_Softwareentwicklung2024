using Statiq.Common;
using Statiq.Markdown;
using System.Text;

public class MyConfig : Configurator
{
    public override void Configure(IDictionary<string, object> settings)
    {
        // Specify the input files if needed for other purposes; adjust this as required
        settings[Keys.InputFiles] = "Program.cs, CsvReader.cs, ScalarField.cs";

        // Define a pipeline to generate README.md
        Pipelines.Add("ReadMePipeline",
            new ExecuteConfig(Config.FromDocument((doc, ctx) =>
            {
                var content = new StringBuilder();

                // Title and Introduction
                content.AppendLine("# Isolinienprogramm");
                content.AppendLine("Dieses Programm erzeugt Isolinienkarten basierend auf Skalarfeldern.");

                // Usage
                content.AppendLine("## Verwendung");
                content.AppendLine("1. Geben Sie den Pfad zur CSV-Datei ein.");
                content.AppendLine("2. Starten Sie das Programm, um die Isolinienkarte zu generieren.");

                // Example Code Snippet
                content.AppendLine("```csharp");
                content.AppendLine("static async Task Main(string[] args)");
                content.AppendLine("{");
                content.AppendLine("    // Code hier...");
                content.AppendLine("}");
                content.AppendLine("```");

                // Installation Instructions
                content.AppendLine("## Installation");
                content.AppendLine("Stellen Sie sicher, dass Sie .NET 8.0.x installiert haben.");
                content.AppendLine("```bash");
                content.AppendLine("dotnet build");
                content.AppendLine("dotnet run");
                content.AppendLine("```");

                // Return the document with the content
                return ctx.CreateDocument("README.md", content.ToString());
            }))
        );

        // Set the output path directory; Statiq will place the output in this directory
        settings[Keys.OutputPath] = "output"; // This should be a directory where files will be placed

        // Optionally, configure other settings, if needed
        // settings[Keys.ContentPath] = "content"; // Example if you have content files
        // settings[Keys.TemplatePath] = "templates"; // Example if you have template files
    }
}
